version: '3.8'

services:
  twatterd:
    build:
      context: .
      dockerfile: ./build/twatterd/Dockerfile
    command: 
      - -addr=:9876
      - -queue_workers=4
    ports:
      - 9876:9876
    environment:
      APP_ENV: "development"
      DATABASE_URL: "postgresql://root@roach1:26257/twatter?sslmode=disable"
      KAFKA_ADDR: "kafka:9092"
    depends_on:
      roach1:
        condition: service_healthy
      roach2:
        condition: service_healthy
      roach-initialiser:
        condition: service_started
      kafka:
        condition: service_started
    networks:
      - roachnet
      - twatterd
    restart: always

  spammer:
    build:
      context: .
      dockerfile: ./build/spammer/Dockerfile
    command:
      - -pace=1s
      - -destination=http://twatterd:9876/add
    depends_on:
      twatterd:
        condition: service_started
    networks:
      - twatterd

  roach1:
    image: cockroachdb/cockroach:latest
    hostname: roach1
    command: start --insecure --advertise-addr=roach1:26357 --http-addr=roach1:8080 --listen-addr=roach1:26357 --sql-addr=roach1:26257 --join=roach1:26357,roach2:26357
    ports:
      - 8080:8080
      - 26257:26257
    volumes:
      - roach1-data:/cockroach/cockroach-data
    networks:
      roachnet:
        aliases:
          - roach1
    healthcheck:
      test: ["CMD", "cockroach", "node", "status", "--insecure", "--host=roach1:26257"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s


  roach2:
    image: cockroachdb/cockroach:latest
    hostname: roach2
    command: start --insecure --advertise-addr=roach2:26357 --http-addr=roach2:8081 --listen-addr=roach2:26357 --sql-addr=roach2:26258 --join=roach1:26357,roach2:26357
    volumes:
      - roach2-data:/cockroach/cockroach-data
    networks:
      roachnet:
        aliases:
          - roach2
    healthcheck:
      test: ["CMD", "cockroach", "node", "status", "--insecure", "--host=roach1:26257"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s

  roach-initialiser:
    image: cockroachdb/cockroach:latest
    depends_on:
      roach1:
        condition: service_started
      roach2:
        condition: service_started
    networks:
      - roachnet
    volumes:
      - ./scripts/setup_db.sh:/setup_db.sh  
      - ./scripts/sql-init.d:/docker-entrypoint-initdb.d
    command:
      - "shell" 
      - "/setup_db.sh"
      - "roach1:26357"
      - "roach1:26257"

  zookeeper:
    image: confluentinc/cp-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kafka

  kafka:
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - twatterd
      - kafka

networks:
  roachnet:
    driver: bridge
  twatterd:
    driver: bridge
  kafka:
    driver: bridge

volumes:
  roach1-data:
  roach2-data: